{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{useMsal}from'@azure/msal-react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const{instance,accounts,inProgress}=useMsal();const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{if(accounts.length>0){setUser(accounts[0]);}setLoading(false);},[accounts]);const login=async()=>{try{// Check if we're in demo mode (no real B2C configured)\nconst isDemoMode=!process.env.REACT_APP_B2C_CLIENT_ID||process.env.REACT_APP_B2C_CLIENT_ID==='development-client-id';if(isDemoMode){// Demo mode: Create a fake user session\nconst demoUser={name:'Demo User',username:'demo@communityhub.local',localAccountId:'demo-user-123',homeAccountId:'demo-home-123',environment:'demo',tenantId:'demo-tenant',idTokenClaims:{name:'Demo User',preferred_username:'demo@communityhub.local',given_name:'Demo',family_name:'User'}};setUser(demoUser);console.log('Demo login successful');return;}// Real authentication mode\nconst loginRequest={scopes:['openid','profile','email']};await instance.loginPopup(loginRequest);}catch(error){console.error('Login failed:',error);// If real auth fails, fallback to demo mode\nconst demoUser={name:'Demo User',username:'demo@communityhub.local',localAccountId:'demo-user-123',homeAccountId:'demo-home-123',environment:'demo'};setUser(demoUser);}};const logout=async()=>{try{// Check if we're in demo mode\nconst isDemoMode=!process.env.REACT_APP_B2C_CLIENT_ID||process.env.REACT_APP_B2C_CLIENT_ID==='development-client-id';if(isDemoMode||user&&user.environment==='demo'){// Demo mode: Just clear the user state\nsetUser(null);console.log('Demo logout successful');return;}// Real authentication mode\nconst logoutRequest={account:user};await instance.logoutPopup(logoutRequest);setUser(null);}catch(error){console.error('Logout failed:',error);// If real logout fails, just clear the user state\nsetUser(null);}};const signUp=async()=>{try{// Check if we're in demo mode (no real B2C configured)\nconst isDemoMode=!process.env.REACT_APP_B2C_CLIENT_ID||process.env.REACT_APP_B2C_CLIENT_ID==='development-client-id';if(isDemoMode){// Demo mode: Create a fake user session for new signup\nconst demoUser={name:'New Demo User',username:'newuser@communityhub.local',localAccountId:'demo-newuser-456',homeAccountId:'demo-home-456',environment:'demo',tenantId:'demo-tenant',idTokenClaims:{name:'New Demo User',preferred_username:'newuser@communityhub.local',given_name:'New Demo',family_name:'User'}};setUser(demoUser);console.log('Demo signup successful');return;}// Real authentication mode\nconst signUpRequest={scopes:['openid','profile','email'],authority:process.env.REACT_APP_B2C_SIGNUP_AUTHORITY};await instance.loginPopup(signUpRequest);}catch(error){console.error('Sign up failed:',error);// If real auth fails, fallback to demo mode\nconst demoUser={name:'New Demo User',username:'newuser@communityhub.local',localAccountId:'demo-newuser-456',homeAccountId:'demo-home-456',environment:'demo'};setUser(demoUser);}};const value={user,login,logout,signUp,loading,isAuthenticated:!!user};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useMsal","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","instance","accounts","inProgress","user","setUser","loading","setLoading","length","login","isDemoMode","process","env","REACT_APP_B2C_CLIENT_ID","demoUser","name","username","localAccountId","homeAccountId","environment","tenantId","idTokenClaims","preferred_username","given_name","family_name","console","log","loginRequest","scopes","loginPopup","error","logout","logoutRequest","account","logoutPopup","signUp","signUpRequest","authority","REACT_APP_B2C_SIGNUP_AUTHORITY","value","isAuthenticated","Provider"],"sources":["/Users/mohaimenkhan/repos/research-comm/ui/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useMsal } from '@azure/msal-react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const { instance, accounts, inProgress } = useMsal();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (accounts.length > 0) {\n      setUser(accounts[0]);\n    }\n    setLoading(false);\n  }, [accounts]);\n\n  const login = async () => {\n    try {\n      // Check if we're in demo mode (no real B2C configured)\n      const isDemoMode = !process.env.REACT_APP_B2C_CLIENT_ID || process.env.REACT_APP_B2C_CLIENT_ID === 'development-client-id';\n\n      if (isDemoMode) {\n        // Demo mode: Create a fake user session\n        const demoUser = {\n          name: 'Demo User',\n          username: 'demo@communityhub.local',\n          localAccountId: 'demo-user-123',\n          homeAccountId: 'demo-home-123',\n          environment: 'demo',\n          tenantId: 'demo-tenant',\n          idTokenClaims: {\n            name: 'Demo User',\n            preferred_username: 'demo@communityhub.local',\n            given_name: 'Demo',\n            family_name: 'User'\n          }\n        };\n\n        setUser(demoUser);\n        console.log('Demo login successful');\n        return;\n      }\n\n      // Real authentication mode\n      const loginRequest = {\n        scopes: ['openid', 'profile', 'email'],\n      };\n\n      await instance.loginPopup(loginRequest);\n    } catch (error) {\n      console.error('Login failed:', error);\n      // If real auth fails, fallback to demo mode\n      const demoUser = {\n        name: 'Demo User',\n        username: 'demo@communityhub.local',\n        localAccountId: 'demo-user-123',\n        homeAccountId: 'demo-home-123',\n        environment: 'demo'\n      };\n      setUser(demoUser);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      // Check if we're in demo mode\n      const isDemoMode = !process.env.REACT_APP_B2C_CLIENT_ID || process.env.REACT_APP_B2C_CLIENT_ID === 'development-client-id';\n\n      if (isDemoMode || (user && user.environment === 'demo')) {\n        // Demo mode: Just clear the user state\n        setUser(null);\n        console.log('Demo logout successful');\n        return;\n      }\n\n      // Real authentication mode\n      const logoutRequest = {\n        account: user\n      };\n\n      await instance.logoutPopup(logoutRequest);\n      setUser(null);\n    } catch (error) {\n      console.error('Logout failed:', error);\n      // If real logout fails, just clear the user state\n      setUser(null);\n    }\n  };\n\n  const signUp = async () => {\n    try {\n      // Check if we're in demo mode (no real B2C configured)\n      const isDemoMode = !process.env.REACT_APP_B2C_CLIENT_ID || process.env.REACT_APP_B2C_CLIENT_ID === 'development-client-id';\n\n      if (isDemoMode) {\n        // Demo mode: Create a fake user session for new signup\n        const demoUser = {\n          name: 'New Demo User',\n          username: 'newuser@communityhub.local',\n          localAccountId: 'demo-newuser-456',\n          homeAccountId: 'demo-home-456',\n          environment: 'demo',\n          tenantId: 'demo-tenant',\n          idTokenClaims: {\n            name: 'New Demo User',\n            preferred_username: 'newuser@communityhub.local',\n            given_name: 'New Demo',\n            family_name: 'User'\n          }\n        };\n\n        setUser(demoUser);\n        console.log('Demo signup successful');\n        return;\n      }\n\n      // Real authentication mode\n      const signUpRequest = {\n        scopes: ['openid', 'profile', 'email'],\n        authority: process.env.REACT_APP_B2C_SIGNUP_AUTHORITY\n      };\n\n      await instance.loginPopup(signUpRequest);\n    } catch (error) {\n      console.error('Sign up failed:', error);\n      // If real auth fails, fallback to demo mode\n      const demoUser = {\n        name: 'New Demo User',\n        username: 'newuser@communityhub.local',\n        localAccountId: 'demo-newuser-456',\n        homeAccountId: 'demo-home-456',\n        environment: 'demo'\n      };\n      setUser(demoUser);\n    }\n  };\n\n  const value = {\n    user,\n    login,\n    logout,\n    signUp,\n    loading,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}